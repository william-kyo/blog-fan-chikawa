# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Time
scalar Upload

type User {
  id: ID!  
  nickname: String!
  email: String!
  createdAt: Time!
  updatedAt: Time!
}

type UserDevice {
  id: ID!
  userId: ID!
  deviceId: String!
  createdAt: Time!
  updatedAt: Time!
}

input LoginUser {
  nickname: String!
  email: String!
  deviceId: String!
}

input TranslateText {
  text: String!
  sourceLanguage: String!
  targetLanguage: String!
}

input TextToSpeech {
  text: String!
}

type Chat {
  id: ID!
  userId: ID!
  title: String!
  botName: String!
  sessionId: String!
  createdAt: Time!
  updatedAt: Time!
}

type ChatMessage {
  id: ID!
  chatId: ID!
  content: String!
  isUser: Boolean!
  intent: String
  sentAt: Time!
}

type ChatHistory {
  chat: Chat!
  messages: [ChatMessage!]!
}

type LexConfig {
  botName: String!
  botId: String!
  botAlias: String!
  localeId: String!
}

input CreateChatInput {
  userId: ID!
  title: String!
  botName: String
  botId: String
  botAlias: String
  localeId: String
}

input SendMessageInput {
  chatId: ID!
  message: String!
}

type CustomLabel {
  name: String!
  confidence: Float!
}

type CustomLabelsResult {
  imageUrl: String!
  s3Key: String!
  labels: [CustomLabel!]!
}

type S3PresignedURL {
  uploadUrl: String!
  key: String!
  fields: [S3Field!]!
}

type S3Field {
  name: String!
  value: String!
}

input DetectCustomLabelsInput {
  s3Key: String!
}

type Mutation {
  login(input: LoginUser!): User!
  detectLanguage(input: String!): String!
  detectSentiment(input: String!): String!
  translateText(input: TranslateText): String!
  textToSpeech(input: TextToSpeech!): String!
  createChat(input: CreateChatInput!): Chat!
  sendMessage(input: SendMessageInput!): ChatMessage!
  deleteChat(chatId: ID!): Boolean!
  uploadAndDetectCustomLabels(file: Upload!): CustomLabelsResult!
  detectCustomLabelsFromS3(input: DetectCustomLabelsInput!): CustomLabelsResult!
}

type Query {
  users: [User!]!
  fetchLastData: String!
  userChats(userId: ID!): [Chat!]!
  chatHistory(chatId: ID!): ChatHistory!
  lexConfig: LexConfig!
  generateS3UploadUrl(filename: String!): S3PresignedURL!
}
